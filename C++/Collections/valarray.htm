<!DOCTYPE html>
<html>
	<head>
		<title>C++</title>
		<link rel="stylesheet" href="css/atelier-sulphurpool-light.css" type="text/css">
		<script src="js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
		</style>
	</head>
	<body>
		<div class = "title">
			valarray
		</div>
		<div class = "subtitle">Initialization</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
#include &lt;iostream&gt;
#include &lt;valarray&gt;
#include &lt;iterator&gt;

template &lt;class T&gt;
void display(T it, T end)
{
	while(it != end)
	{
		std::cout&lt;&lt;*it&lt;&lt;" ";
		std::advance(it, 1);
	}
	std::cout&lt;&lt;std::endl;
}

int main(int argc, char *argv[])
{
	std::valarray&lt;int&gt; v = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

	display(std::begin(v), std::end(v));

	std::valarray&lt;int&gt; v2(v[std::slice(1, 3, 2)]);

	display(std::begin(v2), std::end(v2));

	return 0;
}
			</pre>
		</div>
		<div class = "subtitle">Operator</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
#include &lt;iostream&gt;
#include &lt;valarray&gt;
#include &lt;iterator&gt;

template &lt;class T&gt;
void display(T it, T end)
{
	while(it != end)
	{
		std::cout&lt;&lt;*it&lt;&lt;" ";
		std::advance(it, 1);
	}
	std::cout&lt;&lt;std::endl;
}

int main(int argc, char *argv[])
{
	std::valarray&lt;int&gt; v = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

	display(std::begin(v), std::end(v));//1 2 3 4 5 6 7 8 9 10

	std::valarray&lt;int&gt; v2(v[std::slice(1, 3, 2)]);

	display(std::begin(v2), std::end(v2));//2 4 6

	std::valarray&lt;int&gt; v3;
	v3 = v*10;
	display(std::begin(v3), std::end(v3));//10 20 30 40 50 60 70 80 90 100

	return 0;
}
			</pre>
		</div>
		<div class = "subtitle">Operations</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
#include &lt;iostream&gt;
#include &lt;valarray&gt;
#include &lt;iterator&gt;

template &lt;class T&gt;
T increment(T x)
{
	return ++x;
}

template &lt;class T&gt;
void display(T it, T end)
{
	while(it != end)
	{
		std::cout&lt;&lt;*it&lt;&lt;" ";
		std::advance(it, 1);
	}
	std::cout&lt;&lt;std::endl;
}

int main(int argc, char *argv[])
{
	std::valarray&lt;int&gt; v = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

	//apply
	std::valarray&lt;int&gt; v2 = v.apply(increment);//2 3 4 5 6 7 8 9 10 11

	//cshift
	std::valarray&lt;int&gt; v3 = v.cshift(1);//2 3 4 5 6 7 8 9 10 1

	//max
	std::cout&lt;&lt;"Max: "&lt;&lt;v.max()&lt;&lt;std::endl;

	//min
	std::cout&lt;&lt;"Min: "&lt;&lt;v.min()&lt;&lt;std::endl;

	//shift
	std::valarray&lt;int&gt; v4 = v.shift(2);//3 4 5 6 7 8 9 10 0 0

	//size
	std::cout&lt;&lt;"Size: "&lt;&lt;v4.size()&lt;&lt;std::endl;

	//sum
	std::cout&lt;&lt;"Sum: "&lt;&lt;v.sum()&lt;&lt;std::endl;

	display(std::begin(v4), std::end(v4));

	return 0;
}
			</pre>
		</div>
		<div class = "subtitle">Arithmetics</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
#include &lt;iostream&gt;
#include &lt;valarray&gt;
#include &lt;iterator&gt;
#include &lt;cstdlib&gt;

template &lt;class T&gt;
void display(T it, T end)
{
	while(it != end)
	{
		std::cout&lt;&lt;*it&lt;&lt;" ";
		std::advance(it, 1);
	}
	std::cout&lt;&lt;std::endl;
}

int main(int argc, char *argv[])
{
	std::valarray&lt;float&gt; v = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

	std::valarray&lt;float&gt; cosV = std::cos(v);
	display(std::begin(cosV), std::end(cosV));

	std::valarray&lt;float&gt; sinV = std::sin(v);
	display(std::begin(sinV), std::end(sinV));

	std::valarray&lt;float&gt; logV = std::log(v);
	display(std::begin(logV), std::end(logV));

	std::valarray&lt;float&gt; expV = std::exp(v);
	display(std::begin(expV), std::end(expV));

	return 0;
}
			</pre>
		</div>
		<div class = "subtitle">Slice Array</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
#include &lt;iostream&gt;
#include &lt;valarray&gt;
#include &lt;iterator&gt;
#include &lt;cstdlib&gt;

template &lt;class T&gt;
void display(T it, T end)
{
	while(it != end)
	{
		std::cout&lt;&lt;*it&lt;&lt;" ";
		std::advance(it, 1);
	}
	std::cout&lt;&lt;std::endl;
}

int main(int argc, char *argv[])
{
	std::valarray&lt;float&gt; v = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

	std::slice s = std::slice(1, 4, 2);
	v[s] *= std::valarray&lt;float&gt;(10, 4);

	display(std::begin(v), std::end(v));

	return 0;
}
			</pre>
		</div>
		<div class = "subtitle">Mask Array</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
#include &lt;iostream&gt;
#include &lt;valarray&gt;
#include &lt;iterator&gt;
#include &lt;cstdlib&gt;

template &lt;class T&gt;
void display(T it, T end)
{
	while(it != end)
	{
		std::cout&lt;&lt;*it&lt;&lt;" ";
		std::advance(it, 1);
	}
	std::cout&lt;&lt;std::endl;
}

int main(int argc, char *argv[])
{
	std::valarray&lt;float&gt; v = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

	std::valarray&lt;bool&gt; mask(10);
	for(int i = 0; i &lt; 10; i++) mask[i] = (i%2 == 1);

	v[mask] *= std::valarray&lt;float&gt;(10, 5);
	display(std::begin(v), std::end(v));

	v[!mask] = 0;
	display(std::begin(v), std::end(v));

	return 0;
}
			</pre>
		</div>
		<div class = "subtitle">Reference</div>
		<div class = "block">
			<ul>
				<li><a href = "http://www.cplusplus.com/reference/valarray/">cplusplus.com</a></li>
			</ul>
		</div>
	</body>
</html>
