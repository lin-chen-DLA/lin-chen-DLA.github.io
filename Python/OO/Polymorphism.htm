<!DOCTYPE html>
<html>
	<head>
		<title>Python</title>
		<link rel="stylesheet" href="../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
		</style>
	</head>
	<body>
		<div class = "title">
			Polymorphism
		</div>

		<div class = "block">
		<pre class = "prettyprint linenums">
# Vehicle.py
class Vehicle(object):
    """Document String: Define a Vehicle class"""
 
    def __init__(self, brand, year):
        self._brand = brand;
	self._year = year;
 
    def __str__(self):
        return self._brand+' '+str(self._year)

    def info(self):
        print('Class: %s, %s, %d' % (self.__class__, self._brand, self._year))
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# Car.py
from Vehicle import Vehicle;

class Car(Vehicle):
	"""Define class Car, which is inherit from class Vehicle"""
	def __init__(self, brand, year, model):
	    """Construct"""
	    super(Car, self).__init__(brand, year);
	    #Vehicle.__init__(self, brand, year);
	    self.__model = model;

        @property
        def model(self):
            return self.__model

        @model.setter
        def model(self, value):
            self.__model = value

        @model.deleter
        def model(self):
            del self.__model

        # override __str__ in Vehicle
	def __str__(self):
            #return super(Car, self).__str__() + " " + self.model
            return Vehicle.__str__(self) + " " + self.model
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
from Vehicle import Vehicle;
from Car import Car;

def main():
        vehicles = [Vehicle("Buick", 1998), Car("Lincoln", 1998, "Continental")]

	# Buick 1998 Class: &lt;class 'Vehicle.Vehicle'&gt;, Buick, 1998
	# Lincoln 1998 Continental Class: &lt;class 'Car.Car'&gt;, Lincoln, 1998
        for v in vehicles:
            print(v)
            v.info()

if __name__ == '__main__':
	main();

		</pre>
		</div>
		<div class = "subtitle">Reference</div>
		<div class = "block">
			<li>Python How to Program, Chapter 9</li>
		</div>
	</body>
</html>
