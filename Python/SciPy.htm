<!DOCTYPE html>
<html>
	<head>
		<title>Python</title>
		<link rel="stylesheet" href="css/atelier-sulphurpool-light.css" type="text/css">
		<script src="js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red;}
		</style>
	</head>
	<body>
		<div class = "title">
			SciPy
		</div>

		<div class = "subtitle">Modules</div>
		<div class = "block">
			<li><span>scipy.cluster</span>, vector quantization / kmeans</li>
			<li><span>scipy.constants</span>, many mathematical and physical constants</li>
			<li><span>scipy.special</span>, special functions for mathematical physics, such as iry,
elliptic, bessel, gamma, beta, hypergeometric, parabolic
cylinder, mathieu, spheroidal wave, struve, and kelvin
functions.</li>
			<li><span>scipy.integrate</span>, functions for performing numerical integration using
trapezoidal, Simpson's, Romberg, and other methods. Also
provides methods for integration of ordinary differential
equations.</li>
			<li><span>scipy.io</span>, data input and output</li>
			<li><span>scipy.ndimage</span>, n-dimensional image package</li>
			<li><span>scipy.odr</span>, orthogonal distance regression</li>
			<li><span>scipy.spatial</span>, spatial data structures and algorithms</li>
			<li><span>scipy.optimize</span>, sssndard minimization / maximization routines that operate
on generic user-defined objective functions. Algorithms
include: Nelder-Mead Simplex, Powell's, conjugate gradient,
BFGS, least-squares, constrained optimizers, simulated
annealing, brute force, Brent's method, Newton's method,
bisection method, Broyden, Anderson, and line search.</li>
			<li><span>scipy.linalg</span>, much broader base of linear algebra routines than NumPy.</li>
			<li><span>scipy.sparse</span>, routines for working with large, sparse matrices.</li>
			<li><span>scipy.interpolate</span>, routines and classes for interpolation objects that can be
used with discrete numeric data. Linear and spline
interpolation available for one- and two-dimensional data
sets.</li>
			<li><span>scipy.fftpack</span>, fast Fourier transform routines and processing.</li>
			<li><span>scipy.signal</span>, signal processing routines, such as convolution, correlation,
				finite fourier transforms, B-spline smoothing, filtering, etc.</li>
			<li><span>scipy.stats</span>, Huge library of various statistical distributions and statistical
				functions for operating on sets of data.</li>
		</div>
		
		<div class = "subtitle">Array Info</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
#!/usr/bin/python

import numpy as np
from scipy import linalg

A = np.array([[1,3,5],[2,5,1],[2,3,8]]);

# inv
print linalg.inv(A);
print np.linalg.inv(A);
		</pre>
		</div>


		<div class = "subtitle">Reference</div>
		<div class = "block">
			<ul>
				<li><a href = "https://docs.scipy.org/doc/scipy/reference/tutorial/index.html">SciPy Tutorial</a></li>
				<li><a href = "http://www.scipy-lectures.org/">SciPy Lecture Notes</a></li>
				<li><a href = "https://docs.scipy.org/doc/scipy/reference/">SciPy API</a></li>
				<li><a href = "https://engineering.ucsb.edu/~shell/che210d/numpy.pdf">UCSB Tutorial</a></li>
			</ul>
		</div>
	</body>
</html>
