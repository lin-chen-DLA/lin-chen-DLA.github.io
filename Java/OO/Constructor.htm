<!DOCTYPE html>
<html>
	<head>
		<title>Java</title>
		<link rel="stylesheet" href="css/atelier-sulphurpool-light.css" type="text/css">
		<script src="js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red}
		</style>
	</head>
	<body>
		<div class = "title">
			Constructor
		</div>

		<div class = "block">
			<ul>
				<li>Each class must have at least one constructor</li>
				<li>If no constructor is defined, a default constructor is generated by compiler to enable Car c = new Car()</li>
				<li>If any constructors are defined, must to use a constructor to initialize an object</li>
			</ul>
		</div>
		<div class = "subtitle">Overloaded Constructors</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
public class Car
{
	private String maker;

	public Car()
	{
		maker = "Unknown";
	}

	public Car(String maker)
	{
		this.maker = maker;
	}

	public String toString()
	{
		return "Maker: "+this.maker;
	}

	public static void main(String args[])
	{
		Car c = new Car();

		System.out.println(c);
	}
}
			</pre>
		</div>
		<div class = "subtitle">Copy Constructor</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
public class Car
{
	private String maker;

	//copy constructor
	public Car(Car c)
	{
		maker = c.maker;
	}

	//constructor
	public Car(String maker)
	{
		this.maker = maker;
	}

	public String toString()
	{
		return "Maker: "+this.maker;
	}

	public static void main(String args[])
	{
		Car c = new Car("Buick");
		Car c2 = new Car(c);

		System.out.println(c2);
	}
}
			</pre>
		</div>
		<div class = "subtitle">Constructor Chaining</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
public class Car
{
	private String maker;
	private String color;

	//int block
	{
		System.out.println("Int block is implemented before any constructor");
	}

	//constructor
	public Car(String m, String c)
	{
		maker = m;
		color = c;
	}

	public Car(String maker)
	{
		this(maker, "unknown");
	}

	public Car()
	{
		this("unknown");
	}

	public String toString()
	{
		return "Maker: "+this.maker+" Color: "+this.color;
	}

	public static void main(String args[])
	{
		Car c = new Car("Buick");

		System.out.println(c);
	}
}
			</pre>
		</div>
		<div class = "subtitle">Reference</div>
		<div class = "block">
			<ul>
				<li><a href = "http://www.geeksforgeeks.org/constructor-chaining-java-examples/">Geeksforgeeks</a></li>
			</ul>
		</div>
	</body>
</html>
