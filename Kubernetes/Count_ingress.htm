<!DOCTYPE html>
<html>
	<head>
		<title>Kubernetes</title>
		<link rel="stylesheet" href="../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red; font-weight: bold;}
		</style>
	</head>
	<body>
		<div class = "title">
			Count
		</div>
        <div class = "block">
            <p style = "text-align:center;"><img src = "img/K8s_20.png" width = "80%"></p>
		</div>
        <div class = "subtitle">Start Minikube</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# ingress on minikube on Docker Desktop does not work
# may due to that it is a container running on Docker Desktop
minikube start --kubernetes-version=v1.22.1 --driver=hyperkit --container-runtime=docker
        </pre>
        </div>
        <div class = "subtitle">Enable Ingress</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
minikube addons enable ingress
        </pre>
        </div>
        <div class = "subtitle">Deploy App</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# app.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: count-ns

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: webapp
  namespace: count-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp # let deployment know which pod for this deployment
  template: # configuration for pods
    metadata:
      labels:
        app: webapp # each pod has a unique name, but pods can share the same label
    spec:
      containers: # containers in a pod, usually add one container per pod
      - name: webapp
        image: lchenlangley/count # pull image from local
        imagePullPolicy: Never
        ports:
        - containerPort: 5000
        env:
        - name: MYREDIS_HOST
          value: redis-service

---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service # service name accessed by app
  namespace: count-ns
spec:
  selector:
    app: webapp # match the pod labels
  ports:
    - protocol: TCP
      port: 5000 # service port
      targetPort: 5000 # pod port

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
  namespace: count-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis # let deployment know which pod for this deployment
  template: # configuration for pods
    metadata:
      labels:
        app: redis # each pod has a unique name, but pods can share the same label
    spec:
      containers: # containers in a pod, usually add one container per pod
      - name: redisdb
        image: redis:alpine # pull image from Docker Hub
        ports:
        - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service # service name accessed by app
  namespace: count-ns
spec:
  selector:
    app: redis # match the pod labels
  ports:
    - protocol: TCP
      port: 6379 # service port
      targetPort: 6379 # pod port

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress # ingress name
  namespace: count-ns
spec:
  rules:
    - host: count.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webapp-service # service name
                port:
                  number: 5000 # service port
        </pre>
		<pre class = "prettyprint linenums">
kubectl apply -f app.yaml
        </pre>
        </div>
        <div class = "subtitle">Connect Ingress IP and Domain</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# get ip of app-ingress
kubectl -n count-ns get ingress

# add ip and domain to /etc/hosts
...
127.0.0.1   localhost
255.255.255.255 broadcasthost
::1             localhost
192.168.64.5    count.org
...
        </pre>
        </div>
        <div class = "subtitle">Access App</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
http://count.org/
        </pre>
        </div>
        <div class = "subtitle">Reference</div>
        <div class = "block">
            <li><a href = "https://kubernetes.io/docs/tasks/access-application-cluster/ingress-minikube/">Documentation</a></li>
		</div>
    </body>
</html>
