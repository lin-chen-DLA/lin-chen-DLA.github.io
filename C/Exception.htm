<!DOCTYPE html>
<html>
	<head>
		<title>C</title>
		<link rel="stylesheet" href="../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red; font-weight: bold;}
		</style>
	</head>
	<body>
		<div class = "title">
			Exception
		</div>

		<div class = "subtitle">Assert</div>
		<div class = "block">
			<li>assert() is defined in assert.h</li>
			<li>The program will be terminated</li>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;assert.h&gt;
 
int main()
{
	int a = 10, b = 0;
 
	assert (b != 0);

	printf("End the program ...\n");
 
	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Exit</div>
		<div class = "block">
			<li>exit() is defined in stdlib.h</li>
			<li>The program will be terminated</li>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
 
int main()
{
	int a = 10, b = 0;

	if(b == 0)
	{
		printf("Divided by zero ...\n");
		exit(EXIT_FAILURE); // -1
	}
 
	printf("End the program ...\n");
 
	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Errno</div>
		<div class = "block">
			<li>errno is a global macro shared by the functions in a program, defined in errno.h</li>
			<li>perror(), attach errno message to the parameter string, defined in stdio.h</li>
			<li>strerror(), create a string containing the errno message, defined in string.h</li>
			<li>Not termnate the program</li>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;errno.h&gt;
#include &lt;string.h&gt;
 
extern int errno;

int main()
{
	FILE *f = fopen("unknown.txt", "r");

	if(f == NULL)
	{
		perror("Errno");
		fprintf(stderr, "Error: %s\n", strerror(errno));
	}
	else
		fclose(f);

	printf("End the program ...\n");
 
	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Try ... Catch</div>
		<div class = "block">
			<li>setjmp(buf), initial the buf, return 0</li>
			<li>longjmp(buf, value), return an integer value, and jump to the location of setjmp(buf) and re-run setjmp(buf)</li>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;setjmp.h&gt;

static jmp_buf buf;

int divide(int a, int b)
{
	if(b == 0)
		longjmp(buf, 1); // throw
	return a/b;
}

int main()
{
	int a = 10;

	for(int b = -5; b &lt;= 5; b++)
	{
		if(!setjmp(buf)) // try
			printf("%d\n", divide(a, b));
		else // catch
			printf("Divided by zero ...\n");
	}

	return 0;
}
		</pre>
		</div>
	</body>
</html>
