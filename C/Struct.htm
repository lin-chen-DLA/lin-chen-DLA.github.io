<!DOCTYPE html>
<html>
	<head>
		<title>C</title>
		<link rel="stylesheet" href="../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red; font-weight: bold;}
		</style>
	</head>
	<body>
		<div class = "title">
			Struct
		</div>

		<div class = "block">
			<li>Define user-defined type with <span>struct</span></li>
			<li>Class in C++ is an extension of struct</li>
		</div>
		<div class = "subtitle">Define a Type with Struct</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// Car.h
#ifndef CAR_H
#define CAR_H

struct Car{
	int year;
	int cylinder;
};

#endif
		</pre>
		<pre class = "prettyprint linenums">
// main.c
#include &lt;stdio.h&gt;
#include "Car.h"

int main()
{
	struct Car c;

	c.year = 2016;
	c.cylinder = 4;

	printf("Year: %d\n", c.year);
	printf("Cylinder: %d\n", c.cylinder);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Define a Type with Struct and Typedef</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// Car.h
#ifndef CAR_H
#define CAR_H

typedef struct
{
	int year;
	int cylinder;
} Car;

#endif
		</pre>
		<pre class = "prettyprint linenums">
// main.c
#include &lt;stdio.h&gt;
#include "Car.h"

int main()
{
	Car c;

	c.year = 2016;
	c.cylinder = 4;

	printf("Year: %d\n", c.year);
	printf("Cylinder: %d\n", c.cylinder);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Copy a Struct</div>
		<div class = "block">
			<p style = "text-align:center;"><img src = "./img/struct_1.png" width=40% /></p>
		</div>
		<div class = "block">
			<li>Copying a struct means copying every element from one struct to another</li>
		<pre class = "prettyprint linenums">
// Car.h
#ifndef CAR_H
#define CAR_H

typedef struct
{
	int year;
	int cylinder;
} Car;

#endif
		</pre>
		<pre class = "prettyprint linenums">
// main.c
#include &lt;stdio.h&gt;
#include "Car.h"

int main()
{
	Car c;
	c.year = 2016;
	c.cylinder = 4;

	Car temp;
	temp = c;

	printf("Year: %d\n", temp.year);
	printf("Cylinder: %d\n", temp.cylinder);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Pass Struct by Value to Function</div>
		<div class = "block">
			<li>Pass a struct to a function by value, make a <span>copy</span> in the function</li>
			<li>Retun a struct, return a <span>copy</span></li>
		<pre class = "prettyprint linenums">
// Car.h
#ifndef CAR_H
#define CAR_H

typedef struct {
	int year;
	int cylinder;
} Car;

#endif
		</pre>
		<pre class = "prettyprint linenums">
// main.c
#include &lt;stdio.h&gt;
#include "Car.h"

Car getCar()
{
	Car car;
	car.year = 2016;
	car.cylinder = 4;

	return car;
}

void display(Car car)
{
	printf("Year: %d\n", car.year);
	printf("Cylinder: %d\n", car.cylinder);
}

int main()
{
	Car c;

	c = getCar();

	display(c);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Pass Struct by Reference to Function</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// Car.h
#ifndef CAR_H
#define CAR_H

typedef struct
{
	int year;
	int cylinder;
} Car;

#endif
		</pre>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include "Car.h"

void getCar(Car *car)
{
	//(*car).year = 2016;
	//(*car).cylinder = 4;
	car-&gt;year = 2016;
	car-&gt;cylinder = 4;
}

void display(Car *car)
{
	printf("Year: %d\n", car-&gt;year);
	printf("Cylinder: %d\n", car-&gt;cylinder);
}

int main()
{
	Car c;

	getCar(&amp;c);

	display(&amp;c);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Use Struct in Array</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// Car.h
#ifndef CAR_H
#define CAR_H

typedef struct
{
	int year;
	int cylinder;
} Car;

#endif
		</pre>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include "Car.h"

void setCars(Car cars[], int size)
{
	cars[0].year = 2016;
	cars[0].cylinder = 4;

	cars[1].year = 2005;
	cars[1].cylinder = 6;

	cars[2].year = 1999;
	cars[2].cylinder = 6;
}

void sort(Car cars[], int size)
{
   for (int i = 0; i &lt; size-1; i++)
       for (int j = 0; j &lt; size-i-1; j++)
           if (cars[j].year &gt; cars[j+1].year)
	   {
		   Car temp = cars[j];
		   cars[j] = cars[j+1];
		   cars[j+1] = temp;
	   }
}

void display(Car cars[], int size)
{
	for(int i = 0; i &lt; size; i++)
	{
		printf("Year: %d\n", cars[i].year);
		printf("Cylinder: %d\n\n", cars[i].cylinder);
	}
}

int main()
{
	Car cars[3];

	setCars(cars, 3);

	display(cars, 3);

	sort(cars, 3);

	display(cars, 3);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Use Struct in Pointer Array</div>
<div class = "block">
			<p style = "text-align:center;"><img src = "img/struct_4.png" width = "60%"></p>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
#ifndef CAR_H
#define CAR_H

typedef struct
{
	int year;
	int cylinder;
} Car;

#endif
		</pre>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "Car.h"

Car *getCars()
{
	Car *cars = (Car *) malloc(3*sizeof(Car));

	cars[0].year = 2016;
	cars[0].cylinder = 4;

	cars[1].year = 2005;
	cars[1].cylinder = 6;

	cars[2].year = 1999;
	cars[2].cylinder = 6;

	return cars;
}

void sort(Car *cars, int size)
{
   for (int i = 0; i &lt; size-1; i++)
       for (int j = 0; j &lt; size-i-1; j++)
           if (cars[j].year &gt; cars[j+1].year)
	   {
		   Car temp = cars[j];
		   cars[j] = cars[j+1];
		   cars[j+1] = temp;
	   }
}

void display(Car *cars, int size)
{
	for(int i = 0; i &lt; size; i++)
	{
		printf("Year: %d\n", cars[i].year);
		printf("Cylinder: %d\n\n", cars[i].cylinder);
	}
}

int main()
{
	Car *cars;

	cars = getCars();

	display(cars, 3);

	sort(cars, 3);

	display(cars, 3);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Struct Composition</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
#ifndef WHEEL_H
#define WHEEL_H

typedef struct{
	float price;
} Wheel;

#endif
		</pre>
		<pre class = "prettyprint linenums">
#ifndef CAR_H
#define CAR_H
#include "Wheel.h"

typedef struct{
	Wheel wheel;
	int year;
	int cylinder;
} Car;

#endif
		</pre>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "Car.h"

int main()
{
	Car car;

	car.wheel.price = 100;
	car.year = 2016;
	car.cylinder = 4;

	printf("Year: %d\n", car.year);
	printf("Cylinder: %d\n", car.cylinder);
	printf("Wheel price: %.2f\n", car.wheel.price);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Array in Struct</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
// Student.h
#ifndef STUDENT_H
#define STUDENT_H

typedef struct
{
	char name[20];
	int grades[5];
} Student;

#endif
		</pre>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include "Student.h"

int getGrade()
{
	int grade;
	printf("Entery grade:");
	scanf("%d", &amp;grade);

	return grade;
}

int main()
{
	Student s;

	strcpy(s.name, "Lin"); // why not s.name = "Lin"
	for(int i = 0; i &lt; 5; i++)
		s.grades[i] = getGrade();
	
	printf("Name: %s\n", s.name);
	for(int i = 0; i &lt; 5; i++)
		printf("Grade: %d\n", s.grades[i]);

	return 0;
}
		</pre>
		</div>
		<div class = "subtitle">Pointer Member</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
#ifndef STUDENT_H
#define STUDENT_H

typedef struct
{
	int num; // number of exames
	int *grades;
} Student;

#endif
		</pre>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include "Student.h"

void display(Student s)
{
	for(int i = 0; i &lt; s.num; i++)
		printf("Grade: %d\n", s.grades[i]);
}

int main()
{
	Student s;
	s.num = 3;
	s.grades = (int *) malloc(s.num*sizeof(int));
	s.grades[0] = 100;
	s.grades[1] = 95;
	s.grades[2] = 90;
	display(s);

	Student s2;
	s2 = s;
	display(s2);

	s.grades[0] = 60;
	display(s2);

	return 0;
}
		</pre>
		</div>
		<div class = "block">
			<p style = "text-align:center;"><img src = "./img/struct_2.png" width=40% /></p>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
#ifndef STUDENT_H
#define STUDENT_H

typedef struct
{
	int num; // number of exames
	int *grades;
} Student;

#endif
		</pre>
		<pre class = "prettyprint linenums">
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include "Student.h"

void display(Student s)
{
	for(int i = 0; i &lt; s.num; i++)
		printf("Grade: %d\n", s.grades[i]);
}

void setS(Student *s)
{
	s-&gt;num = 3;
	s-&gt;grades = (int *) malloc(s-&gt;num*sizeof(int));
	s-&gt;grades[0] = 100;
	s-&gt;grades[1] = 95;
	s-&gt;grades[2] = 90;
}

void copy(Student *dest, Student *source)
{
	dest-&gt;num = source-&gt;num;
	dest-&gt;grades = (int *) malloc(source-&gt;num*sizeof(int));
	memcpy(dest-&gt;grades, source-&gt;grades, source-&gt;num*sizeof(int));
}

int main()
{
	Student s;
	setS(&amp;s);
	display(s);

	Student s2;
	copy(&amp;s2, &amp;s);
	display(s2);

	s.grades[0] = 60;
	display(s2);

	return 0;
}
		</pre>
		</div>
		<div class = "block">
			<p style = "text-align:center;"><img src = "./img/struct_3.png" width=50% /></p>
		</div>
		<div class = "subtitle">Union</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
#include <stdio.h>
#include <string.h>
 
union Employee
{
	// age and hours share the same memory
	int age;
	int hours;
};
 
int main()
{
	union Employee e;
 
	e.age = 39;
	e.hours = 40;
 
	printf("%d: %d\n", e.hours, e.age); // 40 40
 
	return 0;
}
		</pre>
		</div>
	</body>
</html>
