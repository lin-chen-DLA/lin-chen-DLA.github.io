<!DOCTYPE html>
<html>
	<head>
		<title>LeetCode</title>
		<link rel="stylesheet" href="../../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span.red {color: red; font-weight: bold;}
			span.blue {color: blue; font-weight: bold;}
		</style>
	</head>
	<body>
		<div class = "title"><a href = "https://leetcode.com/problems/longest-common-prefix/">14. Longest Common Prefix</a></div>
		<div class = "subtitle">Vertical search</div>
		<div class = "block">
			O(n)
			<pre class = "prettyprint linenums">
from typing import List

class Solution:
    def longestCommonPrefix(self, strs : List[str]) -&gt; str:
        if len(strs) == 0:
            return ''

        if len(strs) == 1:
            return strs[0]

        re = ''
        size = len(strs[0])
        for e in range(len(strs)-1):
            if len(strs[e+1]) &lt; size:
                size = len(strs[e+1])

        for i in range(size):
            letter = strs[0][i]
            for e in range(len(strs)-1):
                if letter != strs[e+1][i]:
                    return re
            re += letter

        return re

def main():
    s = Solution()

    print(s.longestCommonPrefix(["flower","flow","flight"])) # "fl"
    print(s.longestCommonPrefix(["dog","racecar","car"])) # ""

if __name__ == '__main__':
    main()
			</pre>
		</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
from typing import List

class Solution:
    def longestCommonPrefix(self, strs : List[str]) -&gt; str:
        if len(strs) == 0:
            return ""

        length = len(strs[0])

        for i in range(length):
            for s in strs:
                if i == len(s) or s[i] != strs[0][i]:
                    return s[:i]
        
	return strs[0]

def main():
    s = Solution()

    print(s.longestCommonPrefix(["flower","flow","flight"])) # "fl"
    print(s.longestCommonPrefix(["dog","racecar","car"])) # ""

if __name__ == '__main__':
    main()
			</pre>
		</div>
		<div class = "subtitle">Horizontal scanning</div>
		<div class = "block">
			O(n)
			<pre class = "prettyprint linenums">
from typing import List

class Solution:
    def longestCommonPrefix(self, strs : List[str]) -> str:
        if len(strs) == 0:
            return ""

        common = strs[0]

        for i in range(1, len(strs)):
            while strs[i].find(common) != 0:
                common = common[:len(common)-1]

        return common

def main():
    s = Solution()

    print(s.longestCommonPrefix(["flower","flow","flight"])) # "fl"
    print(s.longestCommonPrefix(["dog","racecar","car"])) # ""

if __name__ == '__main__':
    main()
			</pre>
		</div>
	</body>
</html>
