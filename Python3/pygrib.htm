<!DOCTYPE html>
<html>
	<head>
		<title>Python</title>
		<link rel="stylesheet" href="../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red; font-weight: bold;}
		</style>
	</head>
	<body>
		<div class = "title">
			pygrib
		</div>

        <div class = "subtitle">Installation</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
pip install pygrib
		</pre>
		</div>
        <div class = "subtitle">Format</div>
		<div class = "block">
            <li><span>GRIB</span> file format is designed for storing and distributing weather data</li>
            <li>Keys
                <ul>
                    <li>identificationOfOriginatingGeneratingCentre, identification of originating generating centre</li>
                    <li>date, year, month, day, hour, minute, second</li>
                    <li>longitudeOfFirstGridPointInDegrees, latitudeOfFirstGridPointInDegrees, longitudeOfLastGridPointInDegrees, latitudeOfLastGridPointInDegrees</li>
                    <li>regular_II, grid type</li>
                </ul>
            </li>
        </div>
        <div class = "subtitle">NOAA Forecast Repository</div>
        <div class = "block">
			<p style = "text-align:center;"><img src = "img/NOAA_1.png" width = "50%"></p>
		</div>
		<div class = "block">
            <li>Multiple records for a name in a grib2 file, have different level values</li>
        </div>
        <div class = "subtitle">pygrib._pygrib.open</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# open a grib2 file
grbs = pygrib.open('gfs.0p25.2022010100.f000.grib2')

# variables
grbs.messages # number of messages
grbs.messagenumber # current position
grbs.name # grib file

# move the pointer to the 100th record
grbs.seek(100) 
# rewind to the beginning
grbs.rewind()
# get the current position of the pointer
grbs.tell()

# get N messages from current position
msgs = grbs.read(10) # a list of pygrib._pygrib.gribmessage
# read all messages from the current position
msgs = grbs.read() 
# get the message at the current position
msg = grbs.readline() # pygrib._pygrib.gribmessage
# get the nth message
grbs.message(10)

# select
grbs.select() # get all messages
grbs.select()[0].keys() # get keys
grbs.select()[index] # get a message, row
[m.key_name for m in grbs.select()] # get values of a key, column
selected_grbs = grbs.select(year = 2022, name = 'Temperature') # select messages by key values
selected_grbs = grbs(year = 2022, name = 'Temperature')

# close the pointer
grbs.close()
        </pre>
        </div>
        <div class = "subtitle">class pygrib.index</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# create an index with specified keys
grbindx=pygrib.index('gfs.0p25.2022010100.f000.grib2','name','level')

# search messages with keys
selected_grbs=grbindx.select(name='Temperature',level=1)

# close
grbindx.close()
        </pre>
        </div>
        <div class = "subtitle">pygrib._pygrib.gribmessage</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# get the value of a key of a message
grb = grbs.select()[0]
kyes = grb.keys()
grb.key_name
grb['key_name']

grb.data() # values, latitudes, longitudes
grb.latlons() # latitudes (-90, 90), longitudes (0, 360)
        </pre>
        </div>
        <div class = "subtitle">Visualization</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
import numpy as np
import matplotlib.pyplot as plt

data = grb.values

grb = grbs.select()[0]
lons = np.linspace(float(grb['longitudeOfFirstGridPointInDegrees']), \
float(grb['longitudeOfLastGridPointInDegrees']), int(grb['Ni']) )
lats = np.linspace(float(grb['latitudeOfFirstGridPointInDegrees']), \
float(grb['latitudeOfLastGridPointInDegrees']), int(grb['Nj']) )

#cs = plt.contourf(data, extend='both')
c = plt.pcolormesh(lons, lats, data, cmap ='Blues')
plt.colorbar()
        </pre>
        </div>
        <div class = "subtitle">To DataFrame</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
import pandas as pd

records = []
for grb in grbs:
    record = {}
    for key in grb.keys(): 
        s = 'record[key] = grb.{key}'.format(key=key)
        exec(s)
    records.append(record)

df = pd.DataFrame.from_records(records)
        </pre>
        </div>
        <div class = "subtitle">Cropping</div>
        <div class = "block">
			<p style = "text-align:center;"><img src = "img/Pygrib_1.png" width = "30%"></p>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
p1 = (1, 1) # lat1, lon1
p2 = (2, 2) # lat2, lon2

sub_data = grb.data(lat1=p1[0], lat2=p2[0], lon1=p1[1], lon2=p2[1])

if sub_data[0].shape[0] &lt;= 0:
    raise Exception('Sub-region illegal')
    
np.mean(sub_data[0])
        </pre>
        </div>
        <div class = "subtitle">Reference</div>
		<div class = "block">
            <li><a href = "https://en.wikipedia.org/wiki/Global_Forecast_System">Global Forecast System at wiki</a></li>
            <li><a href = "https://mag.ncep.noaa.gov/docs/NCEP_PDD_MAG.pdf">Product Description Document: NCEP Model Analyses & Guidance</a></li>
            <li><a href = "https://spire.com/tutorial/spire-weather-tutorial-intro-to-processing-grib2-data-with-python/">SPIRE Tutorial</a></li>
            <li><a href = "https://rda.ucar.edu/datasets/ds084.1/index.html">NCEP GFS 0.25 Degree Global Forecast Grids Historical Archive</a></li>
            <li><a href = "https://www.nco.ncep.noaa.gov/pmb/docs/grib2/grib2_doc/">NCEP WMO GRIB2 Documentation</a></li>
            <li><a href = "https://confluence.ecmwf.int/display/CKB/What+are+GRIB+files+and+how+can+I+read+them">ECMWF</a></li>
            <li><a href = "https://weather.gc.ca/grib/what_is_GRIB_e.html">What is GRIB?</a></li>
            <li><a href = "https://jswhit.github.io/pygrib/installing.html">pygrib documentation</a></li>
        </div>
    </body>
</html>
