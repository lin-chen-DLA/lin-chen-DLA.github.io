<!DOCTYPE html>
<html>
	<head>
		<title>Algorithm</title>
		<link rel="stylesheet" href="../../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span.red {color: red; font-weight: bold;}
			span.blue {color: blue; font-weight: bold;}
			th, td { border-bottom: 1px solid #ddd;}
		</style>
	</head>
	<body>
		<div class = "title">Decimal to Binary</div>
		<div class = "block">
            <li>Convert a decimal number to its binary number</li>
		</div>
		<div class = "block">
			<pre class = "prettyprint linenums">
# StackModule.py
#!/usr/bin/python3
import copy

class Stack(object):
    def __init__(self):
        self.items = []

    def isEmpty(self):
        return len(self.items) == 0

    def push(self, element):
        try:
            self.items.append(element)
            return True
        except Exception as e:
            return False

    def pop(self):
        try:
            return self.items.pop()
        except Exception as e:
            return None

    def peek(self):
        try:
            return self.items[len(self.items)-1]
        except Exception as e:
            return None

    def size(self):
        return len(self.items)

    def __str__(self):
        output = []

        items = copy.copy(self.items)
        items.reverse()

        for item in items:
            output.append(str(item))

        return " -&gt; ".join(output)
            </pre>
        </div>
		<div class = "block">
			<pre class = "prettyprint linenums">
#!/usr/bin/python3
from StackModule import Stack

def decimal2binary(d):
    s = Stack()

    while d > 0:
        rem = d%2
        d = d//2
        s.push(rem)

    b = ''
    while s.size() > 0:
        b = b+str(s.pop())

    return b

if __name__ == '__main__':
    print(decimal2binary(9)) # 1001
    print(decimal2binary(233)) # 11101001
            </pre>
        </div>
        <div class = "subtitle">Reference</div>
		<div class = "block">
            <li><a href = "https://runestone.academy/ns/books/published/pythonds/BasicDS/ConvertingDecimalNumberstoBinaryNumbers.html">Problem Solving with Algorithms and Data Structures using Python</a></li>
		</div>
	</body>
</html>
