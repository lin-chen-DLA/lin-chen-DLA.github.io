<!DOCTYPE html>
<html>
	<head>
		<title>Python</title>
		<link rel="stylesheet" href="../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css;"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
		</style>
	</head>
	<body>
		<div class = "title">
			Format
		</div>

		<div class = "subtitle" id = "format">format</div>
		<div class = "block">
			<li>Convert a value to a formatted string</li>
		<pre class = "prettyprint linenums">
d = format(123456, '10,d') # use seperator
print(d) # 123,456

n = format(3.1415925, '3.2f') # set precision
print(type(n), n) # 3.14

sr = format('Hello', '&gt;10s') # right align
print(sr, '|') #     Hello |

sl = format('Hello', '&lt;10s') # left align
print(sl, '|') #     Hello |
		</pre>
		</div>

		<div class = "subtitle">Old Style</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# string
str = "String: %s %s" % ('One', 'Two')

str = "String: %10s %10s" % ('One', 'Two') #       One       Two

str = "String: %-10s %-10s" % ('One', 'Two') #One       Two       

str = "String: %10.2s %10.2s" % ('One', 'Two') #        On        Tw

# number
str = "Number: %d %f" % (10, 3.14) # 10 3.140000

str = "Number: %10d %10.2f" % (10, 3.14) #      10      3.14

str = "Number: %010d %010.2f" % (10, 3.14) #0000000010 0000003.14

# named placeholder
d = {'name':'Lin', 'age':37}
str = "%(name)s %(age)d" % d
		</pre>
		</div>

		<div class = "subtitle">New Style</div>
		<div class = "block">
			<li>[[fill]align][sign][#][0][width][grouping_option][.precision][type]</li>
		<pre class = "prettyprint linenums">
# string
s = "String: {} {}".format('One', 'Two')  # One Two
 
s = "String: {1} {0}".format('One', 'Two') # Two One
 
s = "String: {:&gt;10} {:&gt;10}".format('One', 'Two') #       One       Two, right alignment
 
s = "String: {:^10} {:^10}".format('One', 'Two'); #    One       Two, center
 
s = "String: {:&lt;10} {:&lt;10}".format('One', 'Two') # One       Two, left alignment
 
s = "String: {:_&lt;10} {:_&lt;10}".format('One', 'Two') # One_______ Two_______

s = "Integer: {:_=+10} {:_=+10}".format(10, 100) # +_______10 +______100
 
s = "String: {:&gt;10.2} {:&gt;10.2}".format('One', 'Two') #        On        Tw
 
# number
s = "Number: {:d} {:f}".format(10, 3.14) # 10 3.140000
 
s = "Number: {:10d} {:10.2f}".format(10, 3.14) #      10      3.14
 
s = "Number: {:010d} {:010.2f}".format(10, 3.14) #0000000010 0000003.14
 
# named placeholder
d = {'name':'Lin', 'age':37}
s = "{name} {age}".format(**d)

# accessing arguments by name
s = 'Name: {fname}, {lname}'.format(fname='Lin', lname='Chen') # Name: Lin, Chen

s = 'Name: {{Hello}} {fname}, {lname}'.format(fname='Lin', lname='Chen') # Name: {Hello} Lin, Chen

# converting the value to different bases
s = "int: {0:d};  hex: {0:x};  oct: {0:o};  bin: {0:b}".format(42) # int: 42;  hex: 2a;  oct: 52;  bin: 101010
		</pre>
		</div>
		<div class = "subtitle">Format String</div>
		<div class = "block">
            <li>Start with f or F</li>
            <li>Enclosed in single, double, or triple quotes</li>
		<pre class = "prettyprint linenums">
# format string
s = f'Hello World!'

# variable
name = 'Lin'
s = f'Name: {name}' # Name: Lin

# number
# d, decimal format
# e, scientific format
# f, fix point number format
# %, percentage format
n = 3.1415926
s = f'{n:.2f}' # 3.14

# expression
a = 10
b = 20

s = f'a * b = {a*b}' # a * b = 200

# function
def greet(fname, lname):
    return 'Hello, '+fname+' '+lname

fname = 'Lin'
lname = 'Chen'

s = f'{greet(fname, lname)}' # Hello, Lin Chen

# dictionary
name = {'fname':'Lin', 'lname':'Chen'}
s = f'Name: {name["fname"]} {name["lname"]}' # Name: Lin Chen

# quotations
fname = 'Lin'
lname = 'Chen'

s = f'Hello, \'{fname} {lname}\'' # Hello, 'Lin Chen'

s = f'{{fname}}' # {fname}
        </pre>
        </div>

		<div class = "subtitle">Reference</div>
		<div class = "block">
			<ul>
				<li><a href = "https://www.w3schools.com/python/ref_string_format.asp">Formatting Types</a></li>
                <li><a href =
                "https://www.datacamp.com/tutorial/f-string-formatting-in-python?utm_source=google&utm_medium=paid_search&utm_campaignid=19589720830&utm_adgroupid=157156377311&utm_device=c&utm_keyword=&utm_matchtype=&utm_network=g&utm_adpostion=&utm_creative=680291484159&utm_targetid=dsa-2218886984100&utm_loc_interest_ms=&utm_loc_physical_ms=9008564&utm_content=&utm_campaign=230119_1-sea~dsa~tofu_2-b2c_3-us_4-prc_5-na_6-na_7-le_8-pdsh-go_9-na_10-na_11-na-bfcm23&gad_source=1&gclid=CjwKCAiAu9yqBhBmEiwAHTx5p-4Fv2EuFsDObCEYrAjAmMuSP9D_r9DZC7rqogSwVJLcq75KTQxJbBoCqbMQAvD_BwE">f-string
                Formatting in Python</a></li>
				<li><a href = "https://docs.python.org/3/library/string.html#formatspec">Python 3 Library</a></li>
				<li><a href = "https://pyformat.info/">pyFormat</a></li>
			</ul>
		</div>
	</body>
</html>
