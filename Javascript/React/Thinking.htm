<!DOCTYPE html>
<html>
	<head>
		<title>Javascript</title>
		<link rel="stylesheet" href="../../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red}
		</style>
	</head>
	<body>
		<div class = "title">
			Thinking in React
		</div>

		<div class = "subtitle">Step 1: Break The UI Into A Component Hierarchy</div>
		<div class = "subtitle">Step 2: Build A Static Version in React</div>
		<div class = "block">
			<li>passing data from parent to child with props</li>
			<li>don’t use state at all to build this static version</li>
			<li>build top-down or bottom-up</li>
		</div>
		<div class = "subtitle">Step 3: Identify The Minimal Representation Of UI State</div>
		<div class = "block">
			<li>Think of all of the pieces of data in our example application</li>
			<li>go through each one and figure out which one is state
				<ul>
					<li>Is it passed in from a parent via props? If so, it probably isn’t state</li>
					<li>Does it remain unchanged over time? If so, it probably isn’t state</li>
					<li>Can you compute it based on any other state or props in your component? If so, it isn’t state</li>
				</ul>
			</li>
		</div>
		<div class = "subtitle">Step 4: Identify Where Your State Should Live</div>
		<div class = "block">
			<li>For each piece of state in your application
				<ul>
					<li>Identify every component that renders something based on that state</li>
					<li>Find a <span>common owner</span> component (a single component above all the components that need the state in the hierarchy)</li>
					<li>Either the <span>common owner</span> or <span>another component higher up</span> in the hierarchy should own the state</li>
				</ul>
			</li>
		</div>
		<div class = "subtitle">Step 5: Add Inverse Data Flow</div>
		<div class = "block">
			<li>pass the state change functions to the components deep in the hierarchy which will change the states by events</li>
		</div>
	</body>
</html>
