<!DOCTYPE html>
<html>
	<head>
		<title>Docker</title>
		<link rel="stylesheet" href="../css/atelier-sulphurpool-light.css" type="text/css">
		<script src="../js/google-code-prettify/run_prettify.js?autoload=true&amp;lang=css"></script>
		<style>
			div.title {color: navy; font-weight: bold; width: 80%; font-size: 32px; text-align: center; position: relative; margin: auto;}
			div.subtitle {color: navy; font-weight: bold; width: 80%; font-size: 24px; text-align: position: relative; margin: auto;}
			div.block {color: navy; font-weight: bold; width: 80%; border-style: solid; padding: 5px; position: relative; margin: 10px auto; border-radius: 5px;}
			span {color: red; font-weight: bold;}
		</style>
	</head>
	<body>
		<div class = "title">
			Flask App
		</div>
		<div class = "subtitle">Dockerfile</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
FROM python:3 # specify the base image

WORKDIR /usr/src/app # set a directory for the app

COPY . . # copy all the files to the container

RUN pip install --no-cache-dir -r requirements.txt # install dependencies

EXPOSE 8000 # specify is the port number that needs to be exposed

CMD ["python", "./app.py"] # command for running the application
		</pre>
		</div>
		<div class = "subtitle">.dockerignore</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
.git
.gitignore
README.md
LICENSE
		</pre>
		</div>
		<div class = "subtitle">requirements.txt</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
Flask==1.0
        </pre>
        </div>
		<div class = "subtitle">app.py</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
from flask import Flask, render_template
import os
import random

app = Flask(__name__)

# list of cat images
images = [
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F0.gif?alt=media&amp;token=0fff4b31-b3d8-44fb-be39-723f040e57fb",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F1.gif?alt=media&amp;token=2328c855-572f-4a10-af8c-23a6e1db574c",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F10.gif?alt=media&amp;token=647fd422-c8d1-4879-af3e-fea695da79b2",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F11.gif?alt=media&amp;token=900cce1f-55c0-4e02-80c6-ee587d1e9b6e",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F2.gif?alt=media&amp;token=8a108bd4-8dfc-4dbc-9b8c-0db0e626f65b",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F3.gif?alt=media&amp;token=4e270d85-0be3-4048-99bd-696ece8070ea",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F4.gif?alt=media&amp;token=e7daf297-e615-4dfc-aa19-bee959204774",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F5.gif?alt=media&amp;token=a8e472e6-94da-45f9-aab8-d51ec499e5ed",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F7.gif?alt=media&amp;token=9e449089-9f94-4002-a92a-3e44c6bd18a9",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F8.gif?alt=media&amp;token=80a48714-7aaa-45fa-a36b-a7653dc3292b",
    "https://firebasestorage.googleapis.com/v0/b/docker-curriculum.appspot.com/o/catnip%2F9.gif?alt=media&amp;token=a57a1c71-a8af-4170-8fee-bfe11809f0b3",
]


@app.route("/")
def index():
    url = random.choice(images)
    return render_template("index.html", url=url)


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 8000)))
		</pre>
		</div>
		<div class = "subtitle">Create Image</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# create image
docker build -t lchenlangley/cat .
		</pre>
		</div>
		<div class = "subtitle">Push Image to Registry</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# push the image to Docker Hub
docker login
docker push lchenlangley/cat
		</pre>
		</div>
		<div class = "subtitle">Deployment</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# run image
docker pull lchenlangley/cat
docker run -p 8080:8000 lchenlangley/cat # map container port 8000 to host port 8080
		</pre>
		</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# open on web browser
http://0.0.0.0:8080/ # host_ip:host_port
		</pre>
		</div>
		<div class = "subtitle">Push Image with Tag</div>
		<div class = "block">
		<pre class = "prettyprint linenums">
# build an image with a tag
# docker build -t [imageName:tagName] [sourceCodeDir]
docker build -t lchenlangley/cat:v2.0 .

# or
# add tag to an exist image
docker tag lchenlangley/cat lchenlangley/cat:v2.0 # create an image named lchenlangley/cat:v2.0

# multiple images with different tags are under one image repository

# push the image with a tag to Docker Hub
docker push lchenlangley/cat:v2.0 # push the image with the tag to Docker Hub

# pull and run an image with tag
docker run -p 8080:8000 lchenlangley/cat:v2.0
        </pre>
        </div>
		<div class = "subtitle">Reference</div>
		<div class = "block">
            <li><a href = "https://github.com/prakhar1989/docker-curriculum/tree/master/flask-app">Source Code</a></li>
			<li><a href = "https://docker-curriculum.com/">Tutorial</a></li>
		</div>
	</body>
</html>
